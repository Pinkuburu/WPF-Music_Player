<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:方糖音乐播放器" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:WindowsPresentationFoundation="clr-namespace:Microsoft.WindowsAPICodePack.Controls.WindowsPresentationFoundation;assembly=Microsoft.WindowsAPICodePack.Shell" x:Name="window窗体" x:Class="方糖音乐播放器.MainWindow"
        mc:Ignorable="d"
        Title="播放器主窗口" Height="675" Width="1200" SizeToContent="WidthAndHeight" HorizontalContentAlignment="Right" VerticalContentAlignment="Bottom" Grid.IsSharedSizeScope="True" Background="{x:Null}" AllowsTransparency="True" WindowStyle="None" Icon="Resources/图标.png" KeyUp="window窗体_KeyUp" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" AllowDrop="True" Drop="window窗体_Drop" DragEnter="window窗体_DragEnter">
    <Window.Resources>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <i:Interaction.Behaviors>
                                        <ei:FluidMoveBehavior/>
                                    </i:Interaction.Behaviors>
                                </ItemsPresenter>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <StackPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate2">
            <StackPanel x:Name="x1" IsItemsHost="True" SnapsToDevicePixels="True" ClipToBounds="True">
                <i:Interaction.Behaviors>
                    <ei:FluidMoveBehavior x:Name="x2" AppliesTo="Children" Duration="0:0:0.6"/>
                </i:Interaction.Behaviors>
            </StackPanel>
        </ItemsPanelTemplate>


        <Storyboard x:Key="音量条打开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="音量调节1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.002"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.99">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="音量调节1">
                <EasingDoubleKeyFrame KeyTime="0" Value="107.26"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.104">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="音量调节1">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="音量条关闭">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="音量调节1">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="音量调节1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="107.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="音量调节1">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="黑幕动画开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="黑幕">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.4"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="黑幕">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="黑幕动画关">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="黑幕">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="黑幕">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="右菜单弹出">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="播放列队框架">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="播放列队框架">
                <EasingThicknessKeyFrame KeyTime="0" Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="-265,0,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="右菜单关闭">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="播放列队框架">
                <EasingThicknessKeyFrame KeyTime="0" Value="-265,0,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="播放列队框架">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="歌词滚动条隐藏">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ScrollViewer.VerticalScrollBarVisibility)" Storyboard.TargetName="歌词滚动显示">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static ScrollBarVisibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static ScrollBarVisibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="歌词滚动条打开">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ScrollViewer.VerticalScrollBarVisibility)" Storyboard.TargetName="歌词滚动显示">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static ScrollBarVisibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static ScrollBarVisibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="搜索框打开">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="搜索框">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="搜索框">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="250"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="搜索框关闭">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="搜索框">
                <EasingDoubleKeyFrame KeyTime="0" Value="243"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="搜索框">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="滚动条打开">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ScrollViewer.VerticalScrollBarVisibility)" Storyboard.TargetName="主页的播放列表">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static ScrollBarVisibility.Auto}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="滚动条关闭">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ScrollViewer.VerticalScrollBarVisibility)" Storyboard.TargetName="主页的播放列表">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static ScrollBarVisibility.Auto}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static ScrollBarVisibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="顶部透明开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="colorZone">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="顶部透明关">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="colorZone">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="速度打开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="速度框架">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="速度框架">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.95">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="速度框架">
                <EasingDoubleKeyFrame KeyTime="0" Value="22.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.25"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="速度框架">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="速度关闭">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="速度框架">
                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="速度框架">
                <SplineDoubleKeyFrame KeyTime="0" Value="0.95"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <SineEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="速度框架">
                <SplineDoubleKeyFrame KeyTime="0" Value="1.25"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="22.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="速度框架">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Style.BasedOn>
                <Style TargetType="{x:Type Slider}">
                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="Background" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="IsSnapToTickEnabled" Value="True"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Visibility="Hidden" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Track x:Name="PART_Track" Margin="7,0,8,0" OpacityMask="{x:Null}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Height" Value="8"/>
                                                            <Setter Property="Margin" Value="0,0,0,2"/>
                                                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="3" Width="{TemplateBinding ActualWidth}"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Height" Value="8"/>
                                                            <Setter Property="Margin" Value="0,0,0,2"/>
                                                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="3" Width="{TemplateBinding ActualWidth}"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" VerticalAlignment="Bottom">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" Width="12">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <Viewbox x:Name="Pin" RenderTransformOrigin="0.5,1">
                                                                    <Viewbox.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform ScaleY="0" ScaleX="0"/>
                                                                            <TranslateTransform Y="4"/>
                                                                        </TransformGroup>
                                                                    </Viewbox.RenderTransform>
                                                                    <Grid>
                                                                        <Path Data="M13.437011,33.065002C9.7268463,29.334181 7.812011,26.379009 4.874511,23.379009 1.687011,19.566509 0.12600673,17.206803 5.6843419E-14,14.127608 0.062010996,2.0027046 11.158781,-0.062991121 13.43702,0.0014351187 M13.438011,33.065016C17.148173,29.334199 19.063008,26.379023 22.00051,23.379017 25.188007,19.566519 26.749013,17.206806 26.875018,14.127613 26.813007,2.002704 15.716239,-0.062987381 13.438,0.0014388781" Fill="{TemplateBinding Foreground}" Margin="-7,2,-8,4" Grid.Row="0"/>
                                                                        <Viewbox HorizontalAlignment="Center" Margin="-7,-6,-7,0" Grid.Row="0" Stretch="Uniform" VerticalAlignment="Center" Width="25">
                                                                            <TextBlock Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" FontWeight="Normal" FontSize="11" MinWidth="20" TextAlignment="Center" Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Slider}}}"/>
                                                                        </Viewbox>
                                                                    </Grid>
                                                                </Viewbox>
                                                                <Grid Margin="0" Grid.Row="1">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Rectangle Fill="{TemplateBinding Foreground}" Height="2" Width="6"/>
                                                                    <Rectangle Grid.Column="1" Fill="{DynamicResource MaterialDesignCheckBoxOff}" Height="2" Width="6"/>
                                                                </Grid>
                                                                <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" Grid.Row="1" UseLayoutRounding="True" Width="24"/>
                                                                <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" Height="12" Grid.Row="1" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                                    <Ellipse.RenderTransform>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                    </Ellipse.RenderTransform>
                                                                </Ellipse>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="4"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                    <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Visibility="Hidden" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Track x:Name="PART_Track" Margin="7,0,8,0" OpacityMask="{x:Null}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Height" Value="8"/>
                                                            <Setter Property="Margin" Value="0,0,0,2"/>
                                                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="3" Width="{TemplateBinding ActualWidth}"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Height" Value="8"/>
                                                            <Setter Property="Margin" Value="0,0,0,2"/>
                                                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="3" Width="{TemplateBinding ActualWidth}"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" VerticalAlignment="Bottom">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" Width="12">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <Viewbox x:Name="Pin" RenderTransformOrigin="0.5,1">
                                                                    <Viewbox.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform ScaleY="0" ScaleX="0"/>
                                                                            <TranslateTransform Y="4"/>
                                                                        </TransformGroup>
                                                                    </Viewbox.RenderTransform>
                                                                    <Grid Background="{x:Null}">
                                                                        <Path Data="M13.437011,33.065002C9.7268463,29.334181 7.812011,26.379009 4.874511,23.379009 1.687011,19.566509 0.12600673,17.206803 5.6843419E-14,14.127608 0.062010996,2.0027046 11.158781,-0.062991121 13.43702,0.0014351187 M13.438011,33.065016C17.148173,29.334199 19.063008,26.379023 22.00051,23.379017 25.188007,19.566519 26.749013,17.206806 26.875018,14.127613 26.813007,2.002704 15.716239,-0.062987381 13.438,0.0014388781" Fill="{TemplateBinding Foreground}" Margin="-7,2,-8,4" Grid.Row="0" Width="15"/>
                                                                        <Viewbox HorizontalAlignment="Center" Margin="-7,-6,-7,0" Grid.Row="0" Stretch="Uniform" VerticalAlignment="Center" Width="25">
                                                                            <TextBlock x:Name="进度条显示" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" FontWeight="Normal" FontSize="16" MinWidth="20" TextAlignment="Center" Text="0" Width="30" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Height="30"/>
                                                                        </Viewbox>
                                                                    </Grid>
                                                                </Viewbox>
                                                                <Grid Margin="0" Grid.Row="1">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Rectangle Fill="{TemplateBinding Foreground}" Height="2" Width="6"/>
                                                                    <Rectangle Grid.Column="1" Fill="{DynamicResource MaterialDesignCheckBoxOff}" Height="2" Width="6"/>
                                                                </Grid>
                                                                <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" Grid.Row="1" UseLayoutRounding="True" Width="24"/>
                                                                <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" Height="12" Grid.Row="1" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                                    <Ellipse.RenderTransform>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                    </Ellipse.RenderTransform>
                                                                </Ellipse>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="4"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                    <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Hidden" Width="4"/>
                                        <Track x:Name="PART_Track" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,7,0,8" OpacityMask="{x:Null}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Margin" Value="0,0,2,0"/>
                                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="{TemplateBinding ActualHeight}" Canvas.Left="3" Width="2"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Width" Value="8"/>
                                                            <Setter Property="Margin" Value="0,0,2,0"/>
                                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="{TemplateBinding ActualHeight}" Canvas.Left="3" Width="2"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Focusable="False" HorizontalAlignment="Right" OverridesDefaultStyle="True">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid HorizontalAlignment="Center" Height="12" UseLayoutRounding="True" VerticalAlignment="Center">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Viewbox x:Name="Pin" Grid.Column="0" RenderTransformOrigin="0.5,1">
                                                                    <Viewbox.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform ScaleY="0" ScaleX="0"/>
                                                                            <TranslateTransform X="4"/>
                                                                        </TransformGroup>
                                                                    </Viewbox.RenderTransform>
                                                                    <Grid>
                                                                        <Path Data="M33.065002,13.437011C29.334181,9.7268463 26.379009,7.812011 23.379009,4.874511 19.566509,1.687011 17.206803,0.12600673 14.127608,5.6843419E-14 2.0027046,0.062010996 -0.062991121,11.158781 0.0014351187,13.43702 M33.065016,13.438011C29.334199,17.148173 26.379023,19.063008 23.379017,22.00051 19.566519,25.188007 17.206806,26.749013 14.127613,26.875018 2.002704,26.813007 -0.062987381,15.716239 0.0014388781,13.438" Fill="{TemplateBinding Foreground}" Margin="-2,-7,6,-8" Grid.Row="0"/>
                                                                        <Viewbox HorizontalAlignment="Center" Margin="-8,-7,8,-7" Grid.Row="0" VerticalAlignment="Center" Width="25">
                                                                            <TextBlock Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" FontWeight="Normal" FontSize="11" MinWidth="20" TextAlignment="Center" Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Slider}}}"/>
                                                                        </Viewbox>
                                                                    </Grid>
                                                                </Viewbox>
                                                                <Grid Grid.Column="1" Margin="0">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition Height="Auto"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Rectangle Fill="{TemplateBinding Foreground}" Height="6" Grid.Row="1" Width="2"/>
                                                                    <Rectangle Fill="{DynamicResource MaterialDesignCheckBoxOff}" Height="6" Grid.Row="0" Width="2"/>
                                                                </Grid>
                                                                <Ellipse x:Name="shadow" Grid.Column="1" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" UseLayoutRounding="True" Width="24"/>
                                                                <Ellipse x:Name="grip" Grid.Column="1" Fill="{TemplateBinding Foreground}" Height="12" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                                    <Ellipse.RenderTransform>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                    </Ellipse.RenderTransform>
                                                                </Ellipse>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="4"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" Storyboard.TargetName="Pin">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                    <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SliderStyle2" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Grid.Row="1" Visibility="Hidden"/>
                                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                    <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="8" Width="{TemplateBinding ActualWidth}"/>
                                                                </Canvas>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                    <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="8" Width="{TemplateBinding ActualWidth}"/>
                                                                </Canvas>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" VerticalAlignment="Center" Width="12">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                        <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" UseLayoutRounding="True" Width="24"/>
                                                        <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" Height="12" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                            <Ellipse.RenderTransform>
                                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                            </Ellipse.RenderTransform>
                                                        </Ellipse>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                            <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                                        <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                                        <Rectangle x:Name="PART_SelectionRange" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Visibility="Hidden"/>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="{TemplateBinding ActualHeight}" Canvas.Left="8" Width="2"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="{TemplateBinding ActualHeight}" Canvas.Left="8" Width="2"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Focusable="False" Height="12" OverridesDefaultStyle="True" VerticalAlignment="Top" Width="18">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                                <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" UseLayoutRounding="True" Width="24"/>
                                                                <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" Height="12" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                                    <Ellipse.RenderTransform>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                    </Ellipse.RenderTransform>
                                                                </Ellipse>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                    <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="Both">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColorZoneStyle1" TargetType="{x:Type materialDesign:ColorZone}">
            <Style.Resources>
                <materialDesign:ShadowEdgeConverter x:Key="ShadowEdgeConverter"/>
            </Style.Resources>
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ClipToBounds" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type materialDesign:ColorZone}">
                        <Grid Background="Transparent">
                            <Grid.OpacityMask>
                                <MultiBinding UpdateSourceTrigger="Default">
                                    <MultiBinding.Converter>
                                        <materialDesign:ShadowEdgeConverter/>
                                    </MultiBinding.Converter>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(materialDesign:ShadowAssist.ShadowEdges)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </Grid.OpacityMask>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="4">
                                    <Border.Effect>
                                        <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <materialDesign:ShadowConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Border.Effect>
                                </Border>
                            </AdornerDecorator>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" CornerRadius="4">
                                <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Mode" Value="Inverted">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}"/>
                </Trigger>
                <Trigger Property="Mode" Value="PrimaryLight">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="PrimaryMid">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="PrimaryDark">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Accent">
                    <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Light">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignLightBackground}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignLightForeground}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Dark">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDarkBackground}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Custom">
                    <Setter Property="Background" Value="{Binding (materialDesign:ColorZoneAssist.Background), RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Foreground" Value="{Binding (materialDesign:ColorZoneAssist.Foreground), RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColorZoneStyle2" TargetType="{x:Type materialDesign:ColorZone}">
            <Style.Resources>
                <materialDesign:ShadowEdgeConverter x:Key="ShadowEdgeConverter"/>
            </Style.Resources>
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ClipToBounds" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type materialDesign:ColorZone}">
                        <Grid Background="Transparent">
                            <Grid.OpacityMask>
                                <MultiBinding UpdateSourceTrigger="Default">
                                    <MultiBinding.Converter>
                                        <materialDesign:ShadowEdgeConverter/>
                                    </MultiBinding.Converter>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(materialDesign:ShadowAssist.ShadowEdges)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </Grid.OpacityMask>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                    <Border.Effect>
                                        <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <materialDesign:ShadowConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Border.Effect>
                                </Border>
                            </AdornerDecorator>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" CornerRadius="{TemplateBinding CornerRadius}">
                                <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" TextElement.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Mode" Value="Inverted">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}"/>
                </Trigger>
                <Trigger Property="Mode" Value="PrimaryLight">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="PrimaryMid">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="PrimaryDark">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Accent">
                    <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Light">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignLightBackground}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignLightForeground}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Dark">
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDarkBackground}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}"/>
                </Trigger>
                <Trigger Property="Mode" Value="Custom">
                    <Setter Property="Background" Value="{Binding (materialDesign:ColorZoneAssist.Background), RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Foreground" Value="{Binding (materialDesign:ColorZoneAssist.Foreground), RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Canvas x:Name="主界面" Clip="M0,20 C0,8.954305 8.954305,0 20,0 L1180,0 C1191.0457,0 1200,8.954305 1200,20 L1200,655 C1200,666.04569 1191.0457,675 1180,675 L20,675 C8.954305,675 0,666.04569 0,655 z" HorizontalAlignment="Left" Height="675" VerticalAlignment="Top" Width="1200" >

        <Image x:Name="背景" RenderOptions.BitmapScalingMode="HighQuality" Source="Resources/默认背景.png" Width="1210" SnapsToDevicePixels="True" ClipToBounds="True" Height="685" Canvas.Left="-5" Canvas.Top="-5">
            <Image.Effect>
                <BlurEffect x:Name="背景模糊"/>
            </Image.Effect>
        </Image>
        <materialDesign:ColorZone x:Name="colorZone"
            Mode="PrimaryMid"
            Padding="16" MouseMove="ColorZone_MouseMove" Background="#FF2CCFA0" MouseEnter="colorZone_MouseEnter" MouseLeave="colorZone_MouseLeave" Style="{DynamicResource ColorZoneStyle2}" Width="1200">
            <DockPanel>
                <StackPanel
                    Orientation="Horizontal"
                    materialDesign:RippleAssist.IsCentered="True" Width="1154">
                    <ToggleButton
                        Style="{DynamicResource MaterialDesignHamburgerToggleButton}" Visibility="Collapsed" />
                    <ComboBox x:Name="主题颜色"
                        SelectedIndex="0"
                        Margin="8 0 0 0"
                        BorderThickness="0"
                        materialDesign:ColorZoneAssist.Mode="Standard"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource MaterialDesignPaper}"
                        BorderBrush="{DynamicResource MaterialDesignPaper}" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Background="#00000000" SelectionChanged="主题颜色_SelectionChanged_1">
                        <ComboBoxItem Content="宝石绿"/>
                        <ComboBoxItem Content="桃花粉"/>
                        <ComboBoxItem Content="旬子蓝"/>
                        <ComboBoxItem Content="山茶红"/>
                    </ComboBox>
                    <materialDesign:ColorZone
                        Mode="Standard"
                        Padding="8 4 8 4"
                        CornerRadius="2"
                        Panel.ZIndex="1"
                        Margin="16 0 0 0"
                        materialDesign:ShadowAssist.ShadowDepth="Depth1" Height="40.667" Style="{DynamicResource ColorZoneStyle1}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="Auto" />
                                <ColumnDefinition
                                    Width="*" />
                                <ColumnDefinition
                                    Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button
                                Style="{DynamicResource MaterialDesignToolButton}">
                                <materialDesign:PackIcon
                                    Kind="Magnify"
                                    Opacity=".56" />
                            </Button>
                            <TextBox x:Name="搜索"
                                Grid.Column="1"
                                Margin="8 0 0 0"
                                materialDesign:HintAssist.Hint="搜你所想（￣︶￣）↗[Go]"
                                materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                                BorderThickness="0"
                                MinWidth="200"
                                VerticalAlignment="Center" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" KeyUp="搜索_KeyUp" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" />
                        </Grid>
                    </materialDesign:ColorZone>
                    <ToggleButton x:Name="前端显示"
                        Style="{StaticResource MaterialDesignSwitchToggleButton}"
                        
                        ToolTip="是否显示在最前端" HorizontalAlignment="Right" Margin="680,0,0,0" Background="{Binding Background, ElementName=colorZone}" Foreground="{Binding Background, ElementName=colorZone}" Click="前端显示_Click" HorizontalContentAlignment="Center" Height="40">
                        <materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon
                                Kind="Pin" />
                        </materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon
                            Kind="Pin"
                            RenderTransformOrigin=".5,.5" Foreground="{Binding Background, ElementName=colorZone}" Margin="-1,-1,0,0">
                            <materialDesign:PackIcon.RenderTransform>
                                <RotateTransform
                                    Angle="45" />
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>
                    </ToggleButton>
                    <Button x:Name="最小化1"
                        
                        Style="{DynamicResource MaterialDesignFloatingActionMiniButton}"
                        ToolTip="最小化"
                        materialDesign:ShadowAssist.ShadowDepth="Depth2" Margin="22,0,0,0" FontSize="20" Background="{Binding Background, ElementName=colorZone}" BorderBrush="{x:Null}" Click="最小化_Click">
                        <materialDesign:PackIcon Kind="ArrowCollapse"   x:Name="最小化" Width="30" Height="40"/>
                    </Button>
                    <Button x:Name="关闭程序"
                        Style="{DynamicResource MaterialDesignFloatingActionMiniButton}"
                        ToolTip="关闭程序"
                        materialDesign:ShadowAssist.ShadowDepth="Depth2" FontSize="22" Margin="10,0,0,0" Background="{Binding Background, ElementName=colorZone}" BorderBrush="{x:Null}" Click="关闭程序_Click">
                        <materialDesign:PackIcon Kind="PowerStandby"   Height="30" Width="30"/>
                    </Button>
                </StackPanel>
            </DockPanel>
        </materialDesign:ColorZone>
        <ListBox x:Name="主界面菜单选择"
            Style="{StaticResource MaterialDesignToolToggleListBox}"
            Width="315" Background="WhiteSmoke" MouseEnter="主界面菜单选择_MouseEnter" Height="54.072" Canvas.Left="10" Canvas.Top="77">
            <ListBox.ToolTip>
                <StackPanel>
                    <TextBlock
                        Text="MaterialDesignToolToggleListBox" />
                    <TextBlock
                        Text="Exclusive selection" />
                    <TextBlock
                        Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                </StackPanel>
            </ListBox.ToolTip>
            <ListBoxItem x:Name="打开音乐" ToolTip="打开音频文件" Width="63" HorizontalContentAlignment="Center" MouseUp="打开音乐_MouseUp">
                <materialDesign:PackIcon

                    Kind="Music" Width="30" Height="30" HorizontalAlignment="Left" Foreground="Black" />
            </ListBoxItem>
            <ListBoxItem x:Name="打开视频" ToolTip="打开视频文件" Width="63" HorizontalContentAlignment="Center" MouseUp="打开视频_MouseUp">
                <materialDesign:PackIcon
                    Kind="MovieOpen" Width="30" Height="30" Foreground="Black"/>
            </ListBoxItem>
            <ListBoxItem x:Name="添加歌曲" ToolTip="添加歌曲" Width="63" HorizontalContentAlignment="Center" MouseUp="添加歌曲_MouseUp">
                <materialDesign:PackIcon
                    Kind="FolderMultiplePlus" Width="30" Height="30" Foreground="Black" />
            </ListBoxItem>
            <ListBoxItem x:Name="扫描歌曲" ToolTip="扫描歌曲" Width="63" HorizontalContentAlignment="Center" MouseUp="扫描歌曲_MouseUp">
                <materialDesign:PackIcon
                    Kind="FolderSearch" Width="30" Height="30" Foreground="Black" />
            </ListBoxItem>
            <ListBoxItem x:Name="程序设置" ToolTip="程序设置" Width="63" HorizontalContentAlignment="Center" MouseUp="程序设置_MouseUp">
                <materialDesign:PackIcon
                    Kind="Cog" Width="30" Height="30" Foreground="#FC000000" />
            </ListBoxItem>
        </ListBox>
        <Rectangle HorizontalAlignment="Left" Height="32.594" VerticalAlignment="Top" Width="315" StrokeThickness="0" DataContext="{Binding DataContext, ElementName=主页的播放列表}" Clip="M0,10 C0,4.4771525 4.4771525,0 10,0 L305,0 C310.52285,0 315,4.4771525 315,10 L315,50 C315,55.522847 310.52285,60 305,60 L10,60 C4.4771525,60 0,55.522847 0,50 z" Canvas.Left="10" Canvas.Top="137.072">
            <Rectangle.Fill>
                <SolidColorBrush Color="White" Opacity="0.4"/>
            </Rectangle.Fill>
        </Rectangle>
        <Label  x:Name="播放列表标题"  HorizontalAlignment="Left" Height="32.594" VerticalAlignment="Top" Width="172.68" FontSize="16" VerticalContentAlignment="Center" Padding="4" Effect="{Binding Effect, ElementName=主页的播放列表}" Content="播放列表：" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Foreground="Black" Background="{x:Null}" Canvas.Left="10" Canvas.Top="137.072"/>
        <Label x:Name="歌曲数量" Content="共XX首歌曲" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="16" Height="32.594" Width="141.32" HorizontalContentAlignment="Right" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" VerticalContentAlignment="Center" Effect="{Binding Effect, ElementName=播放列表标题}" Foreground="Black" Background="{x:Null}" Canvas.Left="183.68" Canvas.Top="137.072"/>
        <ListBox x:Name="主页的播放列表" 
            VirtualizingPanel.VirtualizationMode="Recycling"
            HorizontalContentAlignment="Left" VerticalContentAlignment="Top" VerticalAlignment="Stretch" Foreground="#FF1F0000" BorderBrush="{Binding Background, ElementName=主页的播放列表}" ScrollViewer.CanContentScroll="False"   ScrollViewer.VerticalScrollBarVisibility="Hidden" FontFamily="Resources/#站酷快乐体2016修订版" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Clip="M0,-23.594 C0,-29.116847 4.4771525,-33.594 10,-33.594 L305,-33.594 C310.52285,-33.594 315,-29.116847 315,-23.594 L315,379.072 C315,384.59485 310.52285,389.072 305,389.072 L10,389.072 C4.4771525,389.072 0,384.59485 0,379.072 z" MouseUp="主页的播放列表_MouseUp" MouseEnter="主页的播放列表_MouseEnter" MouseLeave="主页的播放列表_MouseLeave" SnapsToDevicePixels="True" Height="390" Canvas.Left="10" Canvas.Top="169.666" Width="315">
            <ListBox.Background>
                <SolidColorBrush Color="White" Opacity="0.4"/>
            </ListBox.Background>
            <ListBox.Effect>
                <DropShadowEffect BlurRadius="15" Opacity="0.5"/>
            </ListBox.Effect>

        </ListBox>
        <Label x:Name="播放歌曲名称" Content="请选择要播放的歌曲..." HorizontalAlignment="Left" Height="55" VerticalAlignment="Top" Width="470" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="30" Foreground="#F8000000" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Canvas.Left="705" Canvas.Top="90"/>
        <Label x:Name="歌手专辑" HorizontalAlignment="Left" Height="23.333" VerticalAlignment="Top" Width="470" HorizontalContentAlignment="Center" Content="" VerticalContentAlignment="Center" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Canvas.Left="705" Canvas.Top="137.072"/>
        <Label x:Name="歌手专辑2" HorizontalAlignment="Left" Height="22.855" VerticalAlignment="Top" Width="470" HorizontalContentAlignment="Center" Content="" VerticalContentAlignment="Center" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Canvas.Left="705" Canvas.Top="160.405"/>
        <Image x:Name="大专辑" RenderOptions.BitmapScalingMode="HighQuality" HorizontalAlignment="Right" Width="300" Height="300" VerticalAlignment="Top" Source="{Binding Source, ElementName=播放栏专辑}" MouseUp="大专辑_MouseUp" Stretch="Fill" SnapsToDevicePixels="True" Canvas.Left="400" Canvas.Top="159.072">
            <Image.Effect>
                <DropShadowEffect BlurRadius="15" Opacity="0.5"/>
            </Image.Effect>
        </Image>
        <ListBox x:Name="歌词滚动显示" HorizontalAlignment="Left" Height="360" ScrollViewer.CanContentScroll="True"  VerticalAlignment="Top" Width="470" ItemsPanel="{DynamicResource ItemsPanelTemplate2}" BorderBrush="{x:Null}" Foreground="Black" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseEnter="歌词滚动显示_MouseEnter" ScrollViewer.VerticalScrollBarVisibility="Hidden" MouseLeave="歌词滚动显示_MouseLeave" MouseUp="歌词滚动显示_MouseUp" Background="{x:Null}" SnapsToDevicePixels="True" RenderTransformOrigin="0,0.5" Canvas.Left="705" Canvas.Top="189.072"/>
        <MediaElement x:Name="播放器" HorizontalAlignment="Left" Height="484" VerticalAlignment="Top" Width="860" LoadedBehavior="Manual" d:IsHidden="True" Volume="1" SpeedRatio="1" SnapsToDevicePixels="True" MediaOpened="播放器_MediaOpened" Canvas.Left="335" Canvas.Top="77">
            <MediaElement.Effect>
                <DropShadowEffect BlurRadius="15" Opacity="0.5"/>
            </MediaElement.Effect>
        </MediaElement>
        <Canvas x:Name="底部播放栏" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Top="564.072" Height="110" Width="1200">
            <Rectangle x:Name="播放栏背景" Fill="{Binding Background, ElementName=colorZone}" HorizontalAlignment="Left" Height="105" VerticalAlignment="Bottom" Width="1200" Opacity="0.4" Canvas.Top="5">
                <Rectangle.Effect>
                    <BlurEffect/>
                </Rectangle.Effect>
            </Rectangle>
            <Slider x:Name="进度条" Height="21.012" VerticalAlignment="Top" Foreground="{Binding Background, ElementName=colorZone}" PreviewMouseDown="进度条_PreviewMouseDown" PreviewMouseUp="进度条_PreviewMouseUp"  IsMoveToPointEnabled="True" ValueChanged="进度条_ValueChanged" MouseEnter="进度条_MouseEnter" MouseLeave="进度条_MouseLeave" Maximum="100" BorderBrush="{x:Null}" SnapsToDevicePixels="True" IsEnabled="False" TickFrequency="0.001" SmallChange="0.001" AutoToolTipPrecision="2" Style="{DynamicResource SliderStyle2}" Cursor="Hand"  Canvas.Left="10" Canvas.Top="5" Width="1180"  />
            <Button x:Name="上一曲"
                Style="{DynamicResource MaterialDesignFloatingActionMiniButton}"
                materialDesign:ShadowAssist.ShadowDepth="Depth2" VerticalAlignment="Bottom" Background="{Binding Background, ElementName=colorZone}" BorderBrush="{x:Null}" Click="上一曲_Click" Canvas.Left="545.019" Canvas.Top="45">
                <materialDesign:PackIcon Width="30" Height="30" Kind="SkipPrevious"/>
            </Button>
            <Button x:Name="下一曲"
                Style="{DynamicResource MaterialDesignFloatingActionMiniButton}"
                materialDesign:ShadowAssist.ShadowDepth="Depth2" VerticalAlignment="Bottom" Background="{Binding Background, ElementName=colorZone}" BorderBrush="{x:Null}" Click="下一曲_Click" Canvas.Left="695.019" Canvas.Top="45">
                <materialDesign:PackIcon Width="30" Height="30" Kind="SkipNext"/>
            </Button>
            <Button x:Name="暂停"
                Style="{DynamicResource MaterialDesignFloatingActionMiniButton}"
                materialDesign:ShadowAssist.ShadowDepth="Depth2" Width="60" Height="60" VerticalAlignment="Bottom" Background="{Binding Background, ElementName=colorZone}" BorderBrush="{x:Null}" Click="暂停_Click" Visibility="Collapsed" Canvas.Left="610.019" Canvas.Top="35">
                <materialDesign:PackIcon Width="40" Height="40" Kind="Pause"/>
            </Button>
            <Button x:Name="播放"
                Style="{DynamicResource MaterialDesignFloatingActionMiniButton}"
                materialDesign:ShadowAssist.ShadowDepth="Depth2" Width="60" Height="60" VerticalAlignment="Bottom" Background="{Binding Background, ElementName=colorZone}" BorderBrush="{x:Null}" Click="播放_Click" Canvas.Left="610.019" Canvas.Top="35">
                <materialDesign:PackIcon Width="40" Height="40" Kind="play"/>
            </Button>
            <Image x:Name="播放栏专辑" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality" Height="70" VerticalAlignment="Bottom" Source="Resources/图标.png" Clip="M-0.10223953,5 C-0.10223953,2.2385763 2.1363367,0 4.8977605,0 L64.89776,0 C67.659184,0 69.89776,2.2385763 69.89776,5 L69.89776,65 C69.89776,67.761424 67.659184,70 64.89776,70 L4.8977605,70 C2.1363367,70 -0.10223953,67.761424 -0.10223953,65 z" Width="70" Stretch="UniformToFill" Canvas.Left="10" Canvas.Top="30"/>
            <ListBox x:Name="底部列表"
                Style="{StaticResource MaterialDesignToolToggleListBox}" Width="200" Background="{Binding Background, ElementName=colorZone}" SelectedIndex="0" VerticalAlignment="Bottom" Canvas.Left="85" Canvas.Top="63">

                <ListBoxItem Background="{x:Null}" ToolTip="列表循环" Foreground="#DD000000">
                    <materialDesign:PackIcon  
                        Kind="Repeat"  />
                </ListBoxItem>
                <ListBoxItem ToolTip="单曲循环">
                    <materialDesign:PackIcon
                        Kind="RepeatOnce" />
                </ListBoxItem>
                <ListBoxItem ToolTip="随机播放">
                    <materialDesign:PackIcon
                        Kind="ShuffleVariant"/>
                </ListBoxItem>
                <ListBoxItem  ToolTip="顺序播放" Width="50">
                    <materialDesign:PackIcon
                        Kind="ShuffleDisabled" Width="25" Height="25" />
                </ListBoxItem>
            </ListBox>
            <Label x:Name="歌曲名称" Content="请选择要播放的歌曲..." HorizontalAlignment="Left" Height="35" VerticalAlignment="Bottom" Width="330" VerticalContentAlignment="Center" FontSize="18" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Foreground="#FD000000" Canvas.Left="85" Canvas.Top="26.012"/>
            <Label x:Name="播放时间" Content="00:00-00:00" HorizontalAlignment="Left" Height="28.988" VerticalAlignment="Top" Width="190" FontSize="20" FontFamily="/方糖音乐播放器;component/Resources/#298-CAI978" HorizontalContentAlignment="Right" Canvas.Left="1000" Canvas.Top="20"/>
            <ListBox x:Name="播放列表"
                Style="{StaticResource MaterialDesignToolToggleListBox}"
                Width="50" Background="{Binding Background, ElementName=colorZone}" VerticalAlignment="Top" Height="35" MouseLeave="播放列表_MouseLeave" Canvas.Left="1125" Canvas.Top="60">

                <ListBoxItem x:Name="右菜单" ToolTip="播放列队" Width="50" Background="{x:Null}" HorizontalContentAlignment="Center" MouseUp="右菜单_MouseUp">
                    <materialDesign:PackIcon  
                        Kind="MenuOpen" Height="25" Padding="0" Width="25" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  />
                </ListBoxItem>
            </ListBox>
            <ListBox x:Name="音量调节"
                Style="{StaticResource MaterialDesignToolToggleListBox}"
                Width="50" Background="{Binding Background, ElementName=colorZone}" HorizontalContentAlignment="Center" MouseLeave="音量调节_MouseLeave" Height="34.512" Canvas.Left="1070" Canvas.Top="60">

                <ListBoxItem x:Name="音量" ToolTip="音量调节" Width="50" Background="{x:Null}" MouseUp="ListBoxItem_MouseUp" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                    <materialDesign:PackIcon  
                        Kind="VolumeHigh" Height="25" Padding="0" Width="25" Margin="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                </ListBoxItem>
            </ListBox>
            <ListBox x:Name="速度调节"
                Style="{StaticResource MaterialDesignToolToggleListBox}"
                Width="50" Background="{Binding Background, ElementName=colorZone}" HorizontalContentAlignment="Center" MouseLeave="速度调节_MouseLeave" Height="34.512" Canvas.Left="1015" Canvas.Top="60.488">

                <ListBoxItem x:Name="速度" ToolTip="播放速度" Width="50" Background="{x:Null}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MouseUp="速度_MouseUp">
                    <materialDesign:PackIcon  
                        Kind="BikeFast" Height="20" Padding="0" Width="20" Margin="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="False"  />
                </ListBoxItem>
            </ListBox>
        </Canvas>
        <Grid x:Name="速度框架" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="215" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" MouseLeave="速度框架_MouseLeave" Canvas.Left="935" Canvas.Top="569.072">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle HorizontalAlignment="Left" Height="50" RadiusY="20" RadiusX="20" VerticalAlignment="Top" Width="215" Fill="White"/>
            <Slider x:Name="速度条"
                Maximum="1.5"
                Style="{StaticResource MaterialDesignDiscreteSlider}"
                Value="1"
                Margin="30,-20,30,15" Minimum="0.5" TickFrequency="0.1" ValueChanged="速度条_ValueChanged" SmallChange="1" />
            <materialDesign:PackIcon Kind="Bike"  HorizontalAlignment="Left" Height="30" Margin="5,10,0,0" VerticalAlignment="Top" Width="30"/>
            <materialDesign:PackIcon Kind="BikeFast" HorizontalAlignment="Left" Height="30" Margin="180,10,0,0" VerticalAlignment="Top" Width="30"/>
            <Label x:Name="速度显示" Content="1倍速" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="75,28.271,0,0" Height="21.729" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Width="60" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
        </Grid>
        <SelectiveScrollingGrid x:Name="音量调节1" HorizontalAlignment="Left" Height="220" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.5,0.5" MouseLeave="音量调节1_MouseLeave" Visibility="Collapsed" Canvas.Left="1056.5" Canvas.Top="399.072">
            <SelectiveScrollingGrid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </SelectiveScrollingGrid.RenderTransform>
            <Rectangle HorizontalAlignment="Left" Height="215" RadiusY="14.5" RadiusX="14.5" VerticalAlignment="Top" Width="75" Fill="#FFF9F9F9"/>
            <Slider x:Name="音量条"
                Orientation="Vertical"
                Minimum="0"
                Maximum="100"
                Style="{StaticResource MaterialDesignDiscreteSlider}"
                ToolTip="声音调节" Margin="-6,10,0,0" Foreground="{Binding Background, ElementName=colorZone}" SmallChange="1" IsMoveToPointEnabled="True" Width="50" HorizontalAlignment="Left" VerticalAlignment="Top" Height="180" Value="100" ValueChanged="音量条_ValueChanged" />
            <Label x:Name="音量显示" Content="100%" HorizontalAlignment="Left" Height="30" Margin="0,185,0,0" VerticalAlignment="Top" Width="75" FontFamily="Resources/#298-CAI978" FontSize="18" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
        </SelectiveScrollingGrid>
        <Rectangle x:Name="黑幕" HorizontalAlignment="Left" Height="675" RadiusY="20" RadiusX="20" VerticalAlignment="Top" Width="1200" Visibility="Collapsed" MouseUp="黑幕_MouseUp">
            <Rectangle.Fill>
                <SolidColorBrush Color="Black" Opacity="0.5"/>
            </Rectangle.Fill>
        </Rectangle>
        <Grid x:Name="播放列队框架" HorizontalAlignment="Left" Height="603" VerticalAlignment="Top" Width="285" SnapsToDevicePixels="True" Canvas.Left="1205" Canvas.Top="72" Margin="0">
            <Rectangle HorizontalAlignment="Left" Height="603" RadiusY="20" RadiusX="20" VerticalAlignment="Top" Width="315" Margin="0,0,-30,0">
                <Rectangle.Effect>
                    <BlurEffect/>
                </Rectangle.Effect>
                <Rectangle.Fill>
                    <SolidColorBrush Color="White" Opacity="0.5"/>
                </Rectangle.Fill>
            </Rectangle>
            <Label Content="播放列队" HorizontalAlignment="Left" Height="33" Margin="10,10,0,0" VerticalAlignment="Top" Width="104" FontSize="24" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016">
                <Label.Effect>
                    <DropShadowEffect BlurRadius="10" Opacity="0.5"/>
                </Label.Effect>
            </Label>
            <Label Content="{Binding Content, ElementName=歌曲数量}" HorizontalAlignment="Left" Height="21.5" Margin="114,21.5,0,0" VerticalAlignment="Top" Width="80" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016">
                <Label.Effect>
                    <DropShadowEffect BlurRadius="10" Opacity="0.5"/>
                </Label.Effect>
            </Label>
            <ListBox x:Name="播放列队" HorizontalAlignment="Left" Height="495" Margin="10,48,0,0" Style="{DynamicResource ListBoxStyle1}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ScrollViewer.CanContentScroll="False" VerticalAlignment="Top" Width="252" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="{x:Null}" BorderBrush="{x:Null}" SelectedIndex="{Binding SelectedIndex, ElementName=主页的播放列表}" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" MouseUp="播放列队_MouseUp"/>
            <ListBox x:Name="关闭右菜单"
                Style="{StaticResource MaterialDesignToolToggleListBox}"
                Margin="20,548,0,0" Width="50" Background="{Binding Background, ElementName=colorZone}" VerticalAlignment="Top" Height="35">

                <ListBoxItem x:Name="关闭右菜单1" ToolTip="播放列队" Width="50" Background="{x:Null}" HorizontalContentAlignment="Center" MouseUp="关闭右菜单1_MouseUp">
                    <materialDesign:PackIcon  
                        Kind="Forwardburger" Height="25" Padding="0,1,0,0" Width="25" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  />
                </ListBoxItem>
            </ListBox>
        </Grid>
        <ListBox x:Name="搜索框" ScrollViewer.CanContentScroll="False" HorizontalAlignment="Left" Height="0"  VerticalAlignment="Top" Width="248" RenderTransformOrigin="0.5,0.5" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderBrush="{x:Null}" MouseLeave="搜索框_MouseLeave" SelectionChanged="搜索框_SelectionChanged" Foreground="Black" Canvas.Left="103.005" Canvas.Top="55.517">
            <ListBox.Background>
                <SolidColorBrush Color="White" Opacity="0.5"/>
            </ListBox.Background>
            <ListBox.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </ListBox.RenderTransform>
        </ListBox>
        <Image x:Name="xss" HorizontalAlignment="Left" Height="90" VerticalAlignment="Top" Width="90" Canvas.Left="415" Canvas.Top="369.072"/>
    </Canvas>
</Window>
