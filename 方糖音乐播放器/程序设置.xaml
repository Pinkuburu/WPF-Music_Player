<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:方糖音乐播放器"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" x:Name="window" x:Class="方糖音乐播放器.程序设置"
        mc:Ignorable="d"
        Title="程序设置" Height="600" Width="400" AllowsTransparency="True" WindowStyle="None" Background="{x:Null}" ShowInTaskbar="False" ResizeMode="NoResize">
    <Window.Resources>
        <Storyboard x:Key="窗体打开">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="window">
                <EasingDoubleKeyFrame KeyTime="0" Value="88.125"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="600"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="window">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="窗体关闭">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="window">
                <EasingDoubleKeyFrame KeyTime="0" Value="600"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="60"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="window">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:ToggleButtonAssist.SwitchTrackOnBackground" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="materialDesign:ToggleButtonAssist.SwitchTrackOffBackground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0,1,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <SineEase x:Key="RippleEasingFunction" EasingMode="EaseInOut"/>
                            <Storyboard x:Key="HideRipple">
                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                            <Storyboard x:Key="ShowRipple">
                                <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                    <DoubleAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Viewbox Width="34">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="23.5">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="23.5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="23.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ThumbHolder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Rectangle x:Name="Track" Fill="{Binding (materialDesign:ToggleButtonAssist.SwitchTrackOffBackground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="15" Margin="4.211,5,4.211,0" Opacity="0.26" RadiusY="7.5" RadiusX="7.5" Stroke="{x:Null}" VerticalAlignment="Top" Width="40"/>
                                <Grid x:Name="ThumbHolder" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Grid.RenderTransform>
                                    <Ellipse x:Name="RippleThumb" Fill="{DynamicResource PrimaryHueLightBrush}" HorizontalAlignment="Center" Height="25" IsHitTestVisible="False" Margin="0" Opacity="0.26" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Width="25">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                        <Ellipse x:Name="Thumb" Effect="{DynamicResource MaterialDesignShadowDepth1}" Fill="#FFFAFAFA" HorizontalAlignment="Center" Height="25" Margin="0" RenderTransformOrigin="0.5,0.5" Stroke="{x:Null}" VerticalAlignment="Center" Width="25"/>
                                    </AdornerDecorator>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" FlowDirection="LeftToRight" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:IsHidden="True"/>
                                </Grid>
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" TargetName="Thumb" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Fill" TargetName="Track" Value="{Binding (materialDesign:ToggleButtonAssist.SwitchTrackOnBackground), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="materialDesign:ToggleButtonAssist.HasOnContent" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Content" TargetName="ContentPresenter" Value="{Binding (materialDesign:ToggleButtonAssist.OnContent), RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="ContentTemplate" TargetName="ContentPresenter" Value="{Binding (materialDesign:ToggleButtonAssist.OnContentTemplate), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="2.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RippleThumb">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Thumb" Value="#FFBDBDBD"/>
                                <Setter Property="Fill" TargetName="Track">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0.12"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RichTextBoxStyle1" TargetType="{x:Type RichTextBox}">
            <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="-4,0,1,0"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type TextBoxBase}">
                    <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="1,0"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="AllowDrop" Value="True"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="materialDesign:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding (SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Command="ApplicationCommands.Cut">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Scissors"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="ApplicationCommands.Copy">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ContentCopy"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="ApplicationCommands.Paste">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ContentPaste"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Command="ApplicationCommands.SelectAll">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="SelectAll"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
        </Style>
        <Storyboard x:Key="帮助关闭">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="帮助">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="410,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="帮助">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="帮助">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="帮助打开">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="帮助">
                <EasingThicknessKeyFrame KeyTime="0" Value="410,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="帮助">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="帮助">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="关于打开">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="关于">
                <EasingThicknessKeyFrame KeyTime="0" Value="-405,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="关于">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="关于">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="关于关闭">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="关于">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="-405,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="关于">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="关于">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="旋转">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="image">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="360"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="恐龙跳2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="packIcon">
                <EasingDoubleKeyFrame KeyTime="0" Value="2.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-116.058">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-116.058">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1.333" Value="-1.058">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="packIcon">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-360">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="packIcon">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.875">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="packIcon">
                <EasingColorKeyFrame KeyTime="0" Value="Red">
                    <EasingColorKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Black">
                    <EasingColorKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
                <EasingColorKeyFrame KeyTime="0:0:0.8" Value="Black">
                    <EasingColorKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
                <EasingColorKeyFrame KeyTime="0:0:0.833" Value="#FF0068FF">
                    <EasingColorKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
                <EasingColorKeyFrame KeyTime="0:0:1.333" Value="Black">
                    <EasingColorKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="-374.669"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse">
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="-2.001"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Canvas x:Name="grid" Clip="M0.5,10.5 C0.5,4.9771525 4.9771525,0.5 10.5,0.5 L389.5,0.5 C395.02285,0.5 399.5,4.9771525 399.5,10.5 L399.5,589.5 C399.5,595.02285 395.02285,599.5 389.5,599.5 L10.5,599.5 C4.9771525,599.5 0.5,595.02285 0.5,589.5 z">
        <Rectangle Fill="White" HorizontalAlignment="Left" Height="600" RadiusY="10" RadiusX="10" Stroke="{Binding Background, ElementName=默认}" VerticalAlignment="Top" Width="400"/>
        <Grid x:Name="标题" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="392" MouseMove="标题_MouseMove" Canvas.Top="20">
            <materialDesign:PackIcon HorizontalAlignment="Left" VerticalAlignment="Top" Height="40" Width="40" Kind="CogOutline" Margin="10,0,0,0" Foreground="{Binding Background, ElementName=默认}"/>
            <Label Content="程序默认设置      " HorizontalAlignment="Left" Height="40" Margin="50,0,0,0" VerticalAlignment="Top" Width="342" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="20" Foreground="Black" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016"/>
            <ListBox HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="40" Margin="352,0,0,0">
                <ListBoxItem Height="40" ToolTip="我需要帮助" HorizontalContentAlignment="Center" MouseUp="ListBoxItem_MouseUp" Padding="1,8,-1,8">
                    <materialDesign:PackIcon Kind="AccountQuestionOutline"  HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="30" Height="30" Foreground="{Binding Background, ElementName=默认}"/>
                </ListBoxItem>
            </ListBox>
        </Grid>
        <Button x:Name="默认" Content="恢复默认" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="115" BorderBrush="{x:Null}" Click="默认_Click" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Canvas.Left="10" Canvas.Top="545"/>
        <Button x:Name="保存" Content="保存更改" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="115" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Click="保存_Click" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Canvas.Left="275" Canvas.Top="545"/>
        <Button x:Name="取消" Content="取消更改" HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="120" Background="{Binding Background, ElementName=默认}" BorderBrush="{x:Null}" Click="取消_Click" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Canvas.Left="140" Canvas.Top="545"/>
        <ListBox x:Name="设置" HorizontalAlignment="Left" Height="460" Style="{DynamicResource SimpleListBox}" VerticalAlignment="Top" Width="360" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Background="{x:Null}" BorderBrush="{Binding Background, ElementName=默认}" Canvas.Left="20" Canvas.Top="80" VerticalContentAlignment="Top" d:IsHidden="True">
            <ListBoxItem x:Name="默认背景" Height="45" VerticalAlignment="Center" MouseUp="默认背景_MouseUp">
                <Grid Height="28" Width="337" VerticalAlignment="Center" HorizontalAlignment="Center">

                    <materialDesign:PackIcon HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="29" Kind="ImageSizeSelectActual" Foreground="{Binding Background, ElementName=默认}"/>
                    <Label Content="修改程序默认背景图片" HorizontalAlignment="Left" Height="28" Margin="29,0,0,0" VerticalAlignment="Top" Width="305" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Foreground="Black"/>
                </Grid>
            </ListBoxItem>
            <Grid Height="30" Width="340">
                <RadioButton x:Name="原始" Content="原始" Margin="94,3.966,196,6.034" Background="{Binding Background, ElementName=默认}" BorderBrush="{x:Null}" IsChecked="True" Click="原始_Click"/>
                <Label Content="缩放模式：" Margin="0,0,266,0.667" VerticalContentAlignment="Center" FontSize="14"/>
                <RadioButton x:Name="填充" Content="填充" Margin="149,3.966,141,6.034" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Click="填充_Click" IsChecked="True"/>
                <RadioButton x:Name="居中" Content="拉伸" Margin="264,4.1,21,5.9" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Click="拉伸_Click"/>
                <RadioButton x:Name="拉伸" Content="居中" Margin="204,4.1,81,5.9" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Click="居中_Click"/>
            </Grid>
            <Grid Height="40" Width="335" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Slider x:Name="模糊" HorizontalAlignment="Center" Height="20" Margin="39,11,10,9" VerticalAlignment="Center" Width="286" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{Binding Background, ElementName=默认}" Maximum="30" SmallChange="1" Value="5" ValueChanged="模糊_ValueChanged"/>
                <Label Content="模糊&#xA;" HorizontalAlignment="Left" Height="25" VerticalAlignment="Center" Width="39" VerticalContentAlignment="Center" Margin="0,9,0,6" FontSize="16" Padding="4,2,4,4" Foreground="Black"/>
            </Grid>
            <ListBoxItem x:Name="歌词路径" Height="43" VerticalAlignment="Center">
                <Grid Height="28" Width="337" VerticalAlignment="Center" HorizontalAlignment="Center" MouseUp="Grid_MouseUp">
                    <materialDesign:PackIcon HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="29" Kind="PlusBoxMultipleOutline" Foreground="{Binding Background, ElementName=默认}"/>
                    <Label Content="设置歌词默认路径" HorizontalAlignment="Left" Height="28" Margin="29,0,0,0" VerticalAlignment="Top" Width="305" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Foreground="Black"/>
                </Grid>
            </ListBoxItem>
            <Label x:Name="路径" Content="当前路径：无" HorizontalAlignment="Left" VerticalAlignment="Top" Width="340" FontSize="14" VerticalContentAlignment="Center" Foreground="Black" MouseUp="路径_MouseUp" Height="31"/>
            <Grid Height="65" Width="340">
                <ToggleButton x:Name="歌词" Content="" HorizontalAlignment="Left" Height="17" Margin="64,10,0,0" VerticalAlignment="Top" Width="55" Background="{Binding Background, ElementName=默认}" Foreground="{Binding Background, ElementName=默认}" Click="歌词_Click" IsChecked="True"/>
                <Label Content="显示歌词" HorizontalAlignment="Left" Height="25" Margin="0,5,0,0" VerticalAlignment="Top" Width="74" FontSize="16" Foreground="Black"/>
                <Label Content="平滑滚动" HorizontalAlignment="Left" Height="25" Margin="110,5,0,0" VerticalAlignment="Top" Width="74" FontSize="16" Foreground="Black"/>
                <ToggleButton x:Name="平滑" Content="" HorizontalAlignment="Left" Height="17" Margin="174.5,10,0,0" VerticalAlignment="Top" Width="55" Foreground="{Binding Background, ElementName=默认}" Background="{Binding Background, ElementName=默认}" Click="平滑_Click" IsChecked="True" IsEnabled="False"/>
                <Label x:Name="桌面歌词" Content="桌面歌词" HorizontalAlignment="Left" Height="25" Margin="224,5,0,0" VerticalAlignment="Top" Width="74" FontSize="16" Foreground="Black"/>
                <ToggleButton x:Name="桌面歌词1" Content="" HorizontalAlignment="Left" Height="17" Margin="285,10,0,0" VerticalAlignment="Top" Width="55" Foreground="{Binding Background, ElementName=默认}" Background="{Binding Background, ElementName=默认}" UseLayoutRounding="False" Click="桌面歌词1_Click"/>
                <ToggleButton x:Name="独立播放1" Content="" HorizontalAlignment="Left" Height="17" Margin="64,39.2,0,-1.2" VerticalAlignment="Top" Width="55" Background="{Binding Background, ElementName=默认}" Foreground="{Binding Background, ElementName=默认}" IsChecked="True" Style="{DynamicResource ToggleButtonStyle1}"/>
                <Label x:Name="独立播放" Content="独立播放" HorizontalAlignment="Left" Height="25" Margin="0,35,0,-5" VerticalAlignment="Top" Width="74" FontSize="16" Foreground="Black"/>
                <Label x:Name="嵌入歌词" Content="嵌入歌词" HorizontalAlignment="Left" Height="25" Margin="110,35,0,-5" VerticalAlignment="Top" Width="74" FontSize="16" Foreground="Black"/>
                <ToggleButton x:Name="嵌入歌词1" Content="" HorizontalAlignment="Left" Height="17" Margin="174.5,39.2,0,-1.2" VerticalAlignment="Top" Width="55" Foreground="{Binding Background, ElementName=默认}" Background="{Binding Background, ElementName=默认}" UseLayoutRounding="False"/>
                <Label x:Name="嵌入歌词_Copy" Content="错误报告" HorizontalAlignment="Left" Height="25" Margin="220.5,35,0,0" VerticalAlignment="Top" Width="74" FontSize="16" Foreground="Black"/>
                <ToggleButton x:Name="错误" Content="" HorizontalAlignment="Left" Height="17" Margin="285,39.2,0,0" VerticalAlignment="Top" Width="55" Foreground="{Binding Background, ElementName=默认}" Background="{Binding Background, ElementName=默认}" UseLayoutRounding="False"/>
            </Grid>
            <Grid x:Name="接口" Height="50" Width="340">
                <Label Content="音乐接口" Margin="0,11.5,256,10" FontSize="16" Foreground="Black" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
                <RadioButton x:Name="腾讯" Content="腾讯" Margin="84,10,196,10" IsChecked="True" Background="{Binding Background, ElementName=默认}" BorderBrush="{x:Null}" Click="腾讯_Click"/>
                <RadioButton x:Name="网易" Content="网易" Margin="144,10,136,10" IsChecked="True" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Click="网易_Click"/>
                <RadioButton x:Name="酷狗" Content="酷狗" Margin="204,10,76,10" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Click="酷狗_Click"/>
                <RadioButton x:Name="虾米" Content="虾米" Margin="264,10,16,10" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" IsEnabled="False"/>
            </Grid>
            <ListBoxItem x:Name="歌曲目录" Height="41" VerticalAlignment="Center" Margin="0" Background="{x:Null}">
                <Grid Height="28" Width="337" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,1,0,0" MouseUp="Grid_MouseUp_1">
                    <materialDesign:PackIcon HorizontalAlignment="Left" VerticalAlignment="Top" Height="28" Width="29" Kind="PlusBoxMultipleOutline" Foreground="{Binding Background, ElementName=默认}"/>
                    <Label Content="设置歌曲缓存目录" HorizontalAlignment="Left" Height="28" Margin="29,0,0,0" VerticalAlignment="Top" Width="305" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" Foreground="Black"/>
                </Grid>
            </ListBoxItem>
            <Label x:Name="歌曲路径" Content="当前路径：系统临时目录" HorizontalAlignment="Left" VerticalAlignment="Top" Width="340" FontSize="14" VerticalContentAlignment="Center" Foreground="Black" MouseUp="歌曲路径_MouseUp" Padding="4,5,4,4" Height="31"/>
            <Grid Height="41" Width="340" Visibility="Collapsed">
                <materialDesign:PackIcon HorizontalAlignment="Left" VerticalAlignment="Stretch" Height="Auto" Width="29" Kind="Music"  Foreground="{Binding Background, ElementName=默认}" Margin="10,6.499,0,6.501"/>
                <Label Content="在线试听音质：" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="49,8.6,0,0" FontSize="14"/>
                <RadioButton Content="128" HorizontalAlignment="Left" Height="16.4" Margin="160,12.4,0,0" VerticalAlignment="Top" Width="74"/>
                <RadioButton Content="320" HorizontalAlignment="Left" Height="16.4" Margin="244,12.4,0,0" VerticalAlignment="Top" Width="74"/>
            </Grid>
        </ListBox>
        <Grid x:Name="帮助" HorizontalAlignment="Left" Height="600" VerticalAlignment="Top" Width="400" Visibility="Visible">
            <Rectangle Fill="#FFF4F4F5" Stroke="{Binding Background, ElementName=默认}" RadiusX="10" RadiusY="10"/>
            <Grid HorizontalAlignment="Left" Height="55" VerticalAlignment="Top" Width="400" MouseMove="Grid_MouseMove_1">
                <materialDesign:PackIcon Kind="TimelineHelpOutline" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="40" Width="45" Margin="10,0,0,0" Foreground="{Binding Background, ElementName=默认}"/>
                <Label Content="程序帮助" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="60,0,0,0" Height="40" Width="300" FontSize="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016"/>
            </Grid>
            <Button ToolTip="返回" HorizontalAlignment="Left" Height="27.167" Margin="10,562.833,0,0" VerticalAlignment="Top" Width="35" Padding="-4,4,-3,4" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Click="Button_Click">
                <materialDesign:PackIcon Kind="KeyboardReturn" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20"/>
            </Button>
            <Button Content="关于程序" HorizontalAlignment="Left" Height="25" Margin="300,565,0,0" VerticalAlignment="Top" Width="90" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{Binding Background, ElementName=默认}" Click="Button_Click_2"/>
            <ScrollViewer x:Name="xx" HorizontalAlignment="Center" Height="507.833" VerticalAlignment="Center" Width="380" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="10,57.167,10,35" HorizontalScrollBarVisibility="Visible">
                <TextBlock HorizontalAlignment="Left" Height="762.833" TextWrapping="Wrap" VerticalAlignment="Top" Width="360" Foreground="#FF426ECD" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" FontSize="13"><Run Text="修改程序默认背景图片："/><Run Foreground="Black" Text="可以修改默认背景图片，支持的格式有"/><Run Foreground="Black" Text="JPG、PNG、JPGE、BMP"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="缩放模式："/><Run Foreground="Black" Text="设置背景图片的在程序中的缩放模式，默认是&quot;填充&quot;"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="模糊："/><Run Foreground="Black" Text="设置背景图片在程序中的模糊程度，默认是&quot;5&quot;"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="设置歌词路径："/><Run Foreground="Black" Text="可以将歌词文件放置到一个文件夹中，播放时会自动读取，歌词读取优先级；&quot;歌曲内嵌→指定文件夹→歌曲目录下&quot;"/><LineBreak/><LineBreak/><Run Text="当前路径："/><Run Foreground="Black" Text="显示用户设置的歌词目录，单击可以打开目录"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="显示歌词："/><Run Foreground="Black" Text="是否显示滚动歌词"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="平滑滚动："/><Run Foreground="Black" Text="设置歌词滚动方式"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="桌面歌词："/><Run Foreground="Black" Text="打开/关闭桌面歌词"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="独立播放："/><Run Foreground="Black" Text="在独立窗口播放视频"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="嵌入歌词："/><Run Foreground="Black" Text="当读取到有效歌词且歌曲没有内嵌歌词的情况下，可以自动将歌词嵌入歌曲内"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="错误报告"/><Run FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Text="："/><Run Foreground="Black" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Text="是否显示程序运行中的错误，如果关闭将看不到错误原因"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="恢复默认："/><Run Foreground="Black" Text="将所有设置恢复默认状态"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="取消更改："/><Run Foreground="Black" Text="取消对设置做出的更改"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="保存更改："/><Run Foreground="Black" Text="保存对设置做出的更改"/><LineBreak/><Run Foreground="Black"/><LineBreak/><Run Text="错误报告："/><Run Foreground="Black" Text="是否向用户发送程序错误原因，以方便排查错误"/><LineBreak/><LineBreak/><Run Text="音乐接口"/><Run FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Text="："/><Run Foreground="Black" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Text="用于指定搜索引擎接口参数，默认为（腾讯）"/><LineBreak/><Run Foreground="Black" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016"/><LineBreak/><Run FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Text="设置歌曲缓存目录"/><Run FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Text="："/><Run Foreground="Black" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" Text="用来设置联网播放歌曲自动缓存目录，默认为系统音乐目录"/><LineBreak/></TextBlock>
            </ScrollViewer>
        </Grid>
        <Grid x:Name="关于" Height="600" Width="400" MouseMove="Grid_MouseMove">
            <Grid.RowDefinitions>
                <RowDefinition Height="53*"/>
                <RowDefinition Height="7*"/>
            </Grid.RowDefinitions>
            <Rectangle Fill="#FFF4F4F5" Stroke="{Binding Background, ElementName=默认}" RadiusX="10" RadiusY="10" Grid.RowSpan="2"/>
            <Image x:Name="image" HorizontalAlignment="Left" Height="130" Margin="10,10,0,0" VerticalAlignment="Top" Width="130" Source="Resources/图标.png" RenderTransformOrigin="0.5,0.5" MouseUp="image_MouseUp">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
                <Image.Effect>
                    <DropShadowEffect BlurRadius="33" Opacity="0.22" Direction="-29" ShadowDepth="3"/>
                </Image.Effect>
            </Image>
            <TextBlock HorizontalAlignment="Left" Height="25" Margin="155,35,0,0" TextWrapping="Wrap" Text="软件名称：方糖音乐播放器" VerticalAlignment="Top" Width="235" FontSize="18" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="258.167,45,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="131.833" FontFamily="黑体" Grid.Row="1"><Span Foreground="#FFA31515" FontSize="12.6666666666667"><Run Text="Copyright ©XCZ  2021"/></Span></TextBlock>
            <TextBlock HorizontalAlignment="Left" Height="70" Margin="155,75,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="235" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016"><Run Text="一款本地化音乐播放器，可以播放本地音频"/><Run Text="、"/><Run Text="视频"/><Run Text="或在线播放歌曲。"/><LineBreak/><Run/><LineBreak/><Run Text="作者：                      XCZ"/><LineBreak/><Run Text="版本：                     1.0.0.0"/><LineBreak/><Run Text="邮箱：    "/><Run Text=" "/><Run Text="  xczzhouqian@gmail.com"/></TextBlock>
            <TextBlock HorizontalAlignment="Left" Height="20" Margin="10,165,0,0" TextWrapping="Wrap" Text="使用声明：" VerticalAlignment="Top" Width="120" FontSize="16" Foreground="{Binding Background, ElementName=默认}" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016"/>
            <TextBlock HorizontalAlignment="Left" Height="205" Margin="10,185,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="380" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" FontSize="13"><Span><Run Text="1."/></Span><Span><Run Text="本软件只限于自然人及非商业用途的使用。这表示任何自然人均可在中华人民共和国境内以非商业用途免费使用本软件。任何组织使用本软件，或任何自然人基于商业用途使用本软件均构成对许可人及其附属合作伙伴的权利侵害，可能导致民事或刑事追究。"/></Span><LineBreak/><Span><Run Text="2."/></Span><Span><Run Text="任何人均不得违反中国相关法律、法规及政策的规定使用本软件，或将本软件用于任何违法目的。"/></Span><LineBreak/><Span><Run Text="3."/></Span><Span><Run Text="用户在使用本软件过程中应尊重权利人的知识产权，不得修改或去除本软件所附带的版权及其它知识产权标识。"/></Span><LineBreak/><Run Text="4.本程序仅供学习交流编程技术使用，如果侵犯您的合法权利，请联系本人第一时间删除。"/><LineBreak/><Run Text="5"/><Run Text="."/><Span><Run Text="安装并使用本软件意味着接受本许可的这些条款和条件。如果您不同意本许可的条款，您必须从您的存储设备中删除本软件全部文件并终止使用本软件。"/></Span></TextBlock>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="10,390,0,0" TextWrapping="Wrap" Text="引用及参考：" VerticalAlignment="Top" Width="105" FontSize="16" Foreground="{Binding Background, ElementName=默认}" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016"/>
            <TextBlock HorizontalAlignment="Left" Height="147.833" Margin="10,410,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="270" Grid.RowSpan="2" FontFamily="/方糖音乐播放器;component/Resources/#HappyZcool-2016" FontSize="13"><Run Text="Costura.Fody"/><LineBreak/><Run Text="MaterialDesignThemes"/><LineBreak/><Run Text="WindowsAPICodePack-Core"/><LineBreak/><Run Text="WindowsAPICodePack-Shell"/><LineBreak/><Run Text="Meting4Net"/><LineBreak/><Run Text="Newtonsoft.Json"/><LineBreak/><Run Text="Taglib-Sharp.dll"/><LineBreak/><Run Text="System.Windows.Interactivity.dll"/><LineBreak/><Run Text="Microsoft.Expression.Interactions.d"/><Run Text="ll"/></TextBlock>
            <Button ToolTip="返回" HorizontalAlignment="Left" Height="27.167" Margin="10,32.833,0,0" VerticalAlignment="Top" Width="35" Padding="-4,4,-3,4" BorderBrush="{x:Null}" Background="{Binding Background, ElementName=默认}" Grid.Row="1" Click="Button_Click_1">
                <materialDesign:PackIcon Kind="KeyboardReturn" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20"/>
            </Button>
            <materialDesign:PackIcon x:Name="Net" Kind="DotNet" HorizontalAlignment="Left" Height="25" Margin="178.167,40,0,0" Grid.Row="1" VerticalAlignment="Top" Width="40" Foreground="#FF595959" MouseEnter="Net_MouseEnter" MouseLeave="Net_MouseLeave" Background="#FFF4F4F5"/>
            <materialDesign:PackIcon x:Name="Csharp" Kind="LanguageCsharp"  HorizontalAlignment="Left" Height="25" Margin="138.167,40,0,0" Grid.Row="1" VerticalAlignment="Top" Width="40" Foreground="#FF595959" MouseEnter="Csharp_MouseEnter" MouseLeave="Csharp_MouseLeave" Background="#FFF4F4F5"/>
            <materialDesign:PackIcon x:Name="GiftOutline" Kind="GiftOutline" HorizontalAlignment="Left" Height="25" Margin="98.167,40,0,0" VerticalAlignment="Top" Width="40" Foreground="#FF595959" Background="#FFF4F4F5" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="12" MouseEnter="GiftOutline_MouseEnter" MouseLeave="GiftOutline_MouseLeave"/>
            <Ellipse x:Name="ellipse" Fill="Red" HorizontalAlignment="Left" Height="10" Margin="354.669,422.001,0,0" Stroke="Red" VerticalAlignment="Top" Width="10" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Effect>
                    <BlurEffect/>
                </Ellipse.Effect>
            </Ellipse>
            <materialDesign:PackIcon x:Name="packIcon" Kind="GoogleDownasaur" HorizontalAlignment="Left" Height="40" Margin="355,0,0,0" VerticalAlignment="Top" Width="40" Grid.Row="1" RenderTransformOrigin="0.5,0.5" MouseUp="packIcon_MouseUp">
                <materialDesign:PackIcon.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </materialDesign:PackIcon.RenderTransform>
            </materialDesign:PackIcon>
            <materialDesign:PackIcon x:Name="_32位版本_" Kind="Cpu32Bit"  HorizontalAlignment="Left" Height="25" Margin="218.167,40,0,0" Grid.Row="1" VerticalAlignment="Top" Width="40" Foreground="#FF595959" Background="#FFF4F4F5" MouseEnter="_32位版本__MouseEnter" MouseLeave="_32位版本__MouseLeave"/>
            <materialDesign:PackIcon x:Name="Github" ToolTip="获取开源项目" Kind="Github" HorizontalAlignment="Left" Height="25" Margin="58.167,40,0,0" Grid.Row="1" VerticalAlignment="Top" Width="40" Foreground="#FF595959" MouseEnter="Github_MouseEnter" MouseLeave="Github_MouseLeave" Background="#FFF4F4F5" MouseUp="Github_MouseUp"/>
        </Grid>
    </Canvas>
</Window>
